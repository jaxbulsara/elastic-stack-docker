services:
  frontend:
    build: frontend
    ports:
      - 8080:80

  backend:
    build: backend
    volumes:
      - "./logs:/var/logs"
    ports:
      - 8000:8000

  filebeat:
    build: elastic/filebeat
    volumes:
      - "./logs:/var/log"
    networks:
      - elastic
    depends_on:
      elasticsearch:
        condition: service_healthy

  logstash:
    build: elastic/logstash
    environment:
      LS_PASSWORD: ${LS_PASSWORD}
    volumes:
      - type: volume
        source: certs
        target: /usr/share/logstash/config/certs
    networks:
      - elastic
    ports:
      - 5044:5044
    depends_on:
      elasticsearch:
        condition: service_healthy

  elasticsearch:
    build: elastic/elasticsearch
    environment:
      LICENSE: ${ES_LICENSE}
      ELASTIC_PASSWORD: ${ES_PASSWORD}
    volumes:
      - type: volume
        source: certs
        target: /usr/share/elasticsearch/config/certs
    ports:
      - 9200:9200
    networks:
      - elastic
    deploy:
      resources:
        limits:
          memory: ${ES_MEMORY_LIMIT}
    depends_on:
      elastic-setup:
        condition: service_healthy
    healthcheck:
      test: [ "CMD-SHELL", "bash healthcheck.sh" ]
      interval: 10s
      timeout: 10s
      retries: 120

  kibana:
    build: elastic/kibana
    environment:
      KB_PASSWORD: ${KB_PASSWORD}
    volumes:
      - type: volume
        source: certs
        target: /usr/share/kibana/config/certs
    ports:
      - 5601:5601
    networks:
      - elastic
    depends_on:
      elasticsearch:
        condition: service_healthy
    healthcheck:
      test: [ "CMD-SHELL", "bash healthcheck.sh", ]
      interval: 10s
      timeout: 10s
      retries: 120

  elastic-setup:
    build: elastic/setup
    user: "0"
    environment:
      ES_PASSWORD: ${ES_PASSWORD}
      KB_PASSWORD: ${KB_PASSWORD}
      LS_PASSWORD: ${LS_PASSWORD}
    volumes:
      - type: volume
        source: certs
        target: /usr/share/elasticsearch/config/certs
    networks:
      - elastic
    healthcheck:
      test: ["CMD-SHELL", "bash healthcheck.sh"]
      interval: 1s
      timeout: 5s
      retries: 120

volumes:
  certs:

networks:
  elastic:
